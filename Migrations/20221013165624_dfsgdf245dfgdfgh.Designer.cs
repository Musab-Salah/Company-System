// <auto-generated />
using System;
using CompanySystem.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanySystem.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20221013165624_dfsgdf245dfgdfgh")]
    partial class dfsgdf245dfgdfgh
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CompanySystem.DAL.DepartmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DepartmentEntity");
                });

            modelBuilder.Entity("CompanySystem.DAL.EmployeeDetailsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId")
                        .IsUnique();

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeeDetails");
                });

            modelBuilder.Entity("CompanySystem.DAL.EmployeeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SN")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CompanySystem.DAL.PageSectionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PageSection");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Musab",
                            CreatedOn = new DateTime(2022, 10, 13, 19, 56, 24, 627, DateTimeKind.Local).AddTicks(2744),
                            Description = "First Description",
                            IsDeleted = false,
                            ModifiedBy = "SALAH",
                            ModifiedOn = new DateTime(2022, 10, 13, 19, 56, 24, 627, DateTimeKind.Local).AddTicks(2781),
                            OrderNumber = 0,
                            Title = "Musab"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Musab",
                            CreatedOn = new DateTime(2022, 10, 13, 19, 56, 24, 627, DateTimeKind.Local).AddTicks(2785),
                            Description = "First Description",
                            IsDeleted = true,
                            ModifiedBy = "SALAH",
                            ModifiedOn = new DateTime(2022, 10, 13, 19, 56, 24, 627, DateTimeKind.Local).AddTicks(2787),
                            OrderNumber = 0,
                            Title = "test"
                        });
                });

            modelBuilder.Entity("CompanySystem.DAL.EmployeeDetailsEntity", b =>
                {
                    b.HasOne("CompanySystem.DAL.DepartmentEntity", "ForDepartmentId")
                        .WithOne("DepartmentId")
                        .HasForeignKey("CompanySystem.DAL.EmployeeDetailsEntity", "DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanySystem.DAL.EmployeeEntity", "ForEmployeeId")
                        .WithOne("EmployeeId")
                        .HasForeignKey("CompanySystem.DAL.EmployeeDetailsEntity", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ForDepartmentId");

                    b.Navigation("ForEmployeeId");
                });

            modelBuilder.Entity("CompanySystem.DAL.DepartmentEntity", b =>
                {
                    b.Navigation("DepartmentId")
                        .IsRequired();
                });

            modelBuilder.Entity("CompanySystem.DAL.EmployeeEntity", b =>
                {
                    b.Navigation("EmployeeId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
